/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var subarraySum = function(nums, k) {
    // prefix , repetition
    let count = 0;
    let prefixesmap = new Map();
    let prefixes = [nums[0]];
    for(let i=1;i<nums.length;i++){
        prefixes.push(prefixes[i-1]+nums[i]);
    };
    for(let i =0;i<nums.length;i++){
        let _target = prefixes[i]-k;
        if(prefixesmap.has(_target)){
            count+=prefixesmap.get(_target);
        }
        if(_target===0){
            count++;
        }
        if(prefixesmap.has(prefixes[i])){
            let count = prefixesmap.get(prefixes[i]);
            count++;
            prefixesmap.set(prefixes[i],count);
        }else{
            prefixesmap.set(prefixes[i],1);
        }
    }

return count;
};
